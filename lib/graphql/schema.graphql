"""
Represents the nutritional information for a recipe.
"""
type Nutritions {
  fat: String
  protein: String
  carbohydrates: String
}

"""
Represents a single recipe with all its details.
"""
type Recipe {
  id: ID!
  recipeName: String!
  servings: String
  description: String
  ingredients: [String!]!
  procedure: String
  estimatedTime: String
  calories: String
  nutritionalInfo: Nutritions
  vegan: Boolean
  categories: [String!]!
}

"""
A wrapper for a Recipe that includes details about how well it matches
a given set of ingredients.
"""
type RecipeMatch {
  recipe: Recipe!
  matchPercentage: Int!
  matchingIngredientsCount: Int!
  totalIngredientsCount: Int!
  missingIngredients: [String!]!
}

"""
A wrapper for a Recipe that includes a relevance score from a full-text search.
"""
type RankedRecipe {
  recipe: Recipe!
  relevanceScore: Float!
}

"""
A reusable input type for filtering recipes.
"""
input RecipeFilters {
  vegan: Boolean
  categories: [String!]
}

"""
Defines all the queries available to the client.
"""
type Query {
  """
  APPROACH 1: Finds recipes that can be made with the exact ingredients provided.
  """
  recipesWithExactIngredients(
    availableIngredients: [String!]!
    filters: RecipeFilters
  ): [Recipe!]!

  """
  APPROACH 2: Finds recipes by the percentage of matching ingredients.
  """
  recipesByIngredientMatch(
    availableIngredients: [String!]!
    minMatchPercentage: Int = 60
    filters: RecipeFilters
  ): [RecipeMatch!]!

  """
  APPROACH 3: Finds recipes using a performant full-text search.
  """
  recipesWithFullTextSearch(
    availableIngredients: [String!]!
    filters: RecipeFilters
  ): [RankedRecipe!]!

  """
  APPROACH 4: Finds recipes using smart matching with substitutions.
  """
  recipesWithSmartMatching(
    availableIngredients: [String!]!
    minMatchPercentage: Int = 50
    filters: RecipeFilters
  ): [RecipeMatch!]!

  """
  APPROACH 5: Gets quick recipe suggestions that contain at least one of the ingredients.
  """
  quickRecipeSuggestions(
    availableIngredients: [String!]!
    limit: Int = 10
    filters: RecipeFilters
  ): [Recipe!]!

  """
  Finds recipes that contain ALL of the specified ingredient names.
  """
  findRecipesByIngredientNames(
    ingredientNames: [String!]!
    filters: RecipeFilters
  ): [Recipe!]!

  """
  Finds recipes that belong to any of the specified categories.
  """
  findRecipesByCategories(
    categories: [String!]!
    filters: RecipeFilters
  ): [Recipe!]!
}

# --- MUTATIONS ---

input NutritionsInput {
  fat: String
  protein: String
  carbohydrates: String
}

input CreateRecipeInput {
  recipeName: String!
  servings: String
  description: String
  ingredients: [String!]!
  procedure: String
  estimatedTime: String
  calories: String
  nutritionalInfo: NutritionsInput
  vegan: Boolean
  categories: [String!]!
}

input UpdateRecipeInput {
  recipeName: String
  servings: String
  description: String
  ingredients: [String!]
  procedure: String
  estimatedTime: String
  calories: String
  nutritionalInfo: NutritionsInput
  vegan: Boolean
  categories: [String!]
}

type Mutation {
  createRecipe(input: CreateRecipeInput!): Recipe!
  updateRecipe(id: ID!, input: UpdateRecipeInput!): Recipe
  deleteRecipe(id: ID!): Recipe
}
